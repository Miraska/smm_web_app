import React, { useState } from 'react';
import { Shield, Trash2, Loader2, Palette } from 'lucide-react';
import { useAuth } from '../../../hooks/useAuth';
import { ThemeToggle } from '../../../components/ThemeToggle';
import { LightThemeDemo } from '../../../components/LightThemeDemo';
import axios from 'axios';

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—É—Ç–∏
const API_BASE_URL = '';

export const SettingsPage: React.FC = () => {
  const { authStatus, logout } = useAuth();
  const [clearingServer, setClearingServer] = useState(false);
  const [clearMessage, setClearMessage] = useState<string | null>(null);
  const [showDemo, setShowDemo] = useState(false);

  const handleClearServer = async () => {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã? –≠—Ç–æ —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞:\n\n‚Ä¢ –í—Å–µ –ø–æ—Å—Ç—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n‚Ä¢ –í—Å–µ –æ—Ç–æ–±—Ä–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã\n‚Ä¢ –í—Å–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã\n‚Ä¢ –í—Å–µ –ø–∞–ø–∫–∏ —Å –º–µ–¥–∏–∞\n\n–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!')) {
      return;
    }

    setClearingServer(true);
    setClearMessage(null);

    try {
      // 1. –û—á–∏—â–∞–µ–º –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã
      console.log('üßπ –û—á–∏—â–∞–µ–º –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã...');
      const cleanupResponse = await axios.post(`${API_BASE_URL}/api/cleanup-media`);
      
      // 2. –û—á–∏—â–∞–µ–º –≤—Å–µ –ø–æ—Å—Ç—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      console.log('üóëÔ∏è –û—á–∏—â–∞–µ–º –ø–æ—Å—Ç—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
      const clearPostsResponse = await axios.delete(`${API_BASE_URL}/api/posts/clear-all`);
      
      console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω');
      console.log(`üóëÔ∏è –ú–µ–¥–∏–∞—Ñ–∞–π–ª—ã: ${cleanupResponse.data.message}`);
      console.log(`üìä –ü–æ—Å—Ç—ã: ${clearPostsResponse.data.message}`);
      
      setClearMessage(`–°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω!\n\nüìä ${clearPostsResponse.data.message}\nüóëÔ∏è ${cleanupResponse.data.message}`);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å–µ—Ä–≤–µ—Ä–∞:', error);
      setClearMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.');
    } finally {
      setClearingServer(false);
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥
      setTimeout(() => setClearMessage(null), 8000);
    }
  };

  return (
    <div className="space-y-8">
      <div>
        <h2 className="text-2xl font-bold text-gray-900 dark:text-white mb-2">
          –ù–∞—Å—Ç—Ä–æ–π–∫–∏
        </h2>
        <p className="text-gray-600 dark:text-gray-400">
          –£–ø—Ä–∞–≤–ª—è–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        </p>
      </div>

      {/* Theme Settings */}
      <div className="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg">
        <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
          –í–Ω–µ—à–Ω–∏–π –≤–∏–¥
        </h3>
        
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <div>
              <p className="font-medium text-gray-900 dark:text-white">
                –¢–µ–º–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
              </p>
              <p className="text-sm text-gray-600 dark:text-gray-400">
                –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —Å–≤–µ—Ç–ª–æ–π –∏ —Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π
              </p>
            </div>
            
            <ThemeToggle size="md" />
          </div>
          
          <div className="flex items-center justify-between pt-4 border-t border-gray-200 dark:border-gray-700">
            <div>
              <p className="font-medium text-gray-900 dark:text-white">
                –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º—ã
              </p>
              <p className="text-sm text-gray-600 dark:text-gray-400">
                –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —É–ª—É—á—à–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
              </p>
            </div>
            
            <button
              onClick={() => setShowDemo(!showDemo)}
              className="flex items-center space-x-2 px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition-colors"
            >
              <Palette className="w-4 h-4" />
              <span>{showDemo ? '–°–∫—Ä—ã—Ç—å' : '–ü–æ–∫–∞–∑–∞—Ç—å'}</span>
            </button>
          </div>
        </div>
      </div>

      {/* Theme Demo */}
      {showDemo && (
        <div className="bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden">
          <LightThemeDemo />
        </div>
      )}

      {/* Account Settings */}
      {authStatus.authorized && (
        <div className="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg">
          <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
            –ê–∫–∫–∞—É–Ω—Ç
          </h3>
          
          <div className="space-y-4">
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-3">
                <div className="p-2 bg-green-100 dark:bg-green-900/30 rounded-lg">
                  <Shield className="w-5 h-5 text-green-500" strokeWidth={2} />
                </div>
                <div>
                  <p className="font-medium text-gray-900 dark:text-white">
                    Telegram —Å–µ—Å—Å–∏—è
                  </p>
                  <p className="text-sm text-gray-600 dark:text-gray-400">
                    –ê–∫—Ç–∏–≤–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram
                  </p>
                </div>
              </div>
              
              <button
                onClick={logout}
                className="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg transition-colors flex items-center space-x-2"
              >
                <span>–í—ã–π—Ç–∏</span>
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Clear Server Success/Error Message */}
      {clearMessage && (
        <div className={`rounded-xl p-4 shadow-lg ${
          clearMessage.includes('—É—Å–ø–µ—à–Ω–æ') 
            ? 'bg-green-50 dark:bg-green-900/30 border border-green-200 dark:border-green-800' 
            : 'bg-red-50 dark:bg-red-900/30 border border-red-200 dark:border-red-800'
        }`}>
          <div className="flex items-start justify-between">
            <div className="flex-1">
              <p className={`font-medium mb-2 ${
                clearMessage.includes('—É—Å–ø–µ—à–Ω–æ') 
                  ? 'text-green-600 dark:text-green-400' 
                  : 'text-red-600 dark:text-red-400'
              }`}>
                {clearMessage.includes('—É—Å–ø–µ—à–Ω–æ') ? '–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞' : '–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏'}
              </p>
              <pre className={`text-sm whitespace-pre-wrap ${
                clearMessage.includes('—É—Å–ø–µ—à–Ω–æ') 
                  ? 'text-green-700 dark:text-green-300' 
                  : 'text-red-700 dark:text-red-300'
              }`}>
                {clearMessage}
              </pre>
            </div>
            <button
              onClick={() => setClearMessage(null)}
              className={`ml-4 hover:opacity-70 ${
                clearMessage.includes('—É—Å–ø–µ—à–Ω–æ') 
                  ? 'text-green-400' 
                  : 'text-red-400'
              }`}
            >
              √ó
            </button>
          </div>
        </div>
      )}

      {/* Data Management */}
      <div className="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg">
        <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
          –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏
        </h3>
        
        <div className="flex items-center justify-between">
          <div className="flex items-center space-x-3">
            <div className="p-2 bg-red-100 dark:bg-red-900/30 rounded-lg">
              <Trash2 className="w-5 h-5 text-red-600" strokeWidth={2} />
            </div>
            <div>
              <p className="font-medium text-gray-900 dark:text-white">
                –û—á–∏—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä
              </p>
              <p className="text-sm text-gray-600 dark:text-gray-400">
                –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞
              </p>
            </div>
          </div>
          
          <button
            onClick={handleClearServer}
            disabled={clearingServer}
            className="bg-red-600 hover:bg-red-700 disabled:bg-red-400 text-white px-4 py-2 rounded-lg transition-colors flex items-center space-x-2"
          >
            {clearingServer ? (
              <>
                <Loader2 className="w-4 h-4 animate-spin" />
                <span>–û—á–∏—â–∞–µ–º...</span>
              </>
            ) : (
              <span>–û—á–∏—Å—Ç–∏—Ç—å</span>
            )}
          </button>
        </div>
      </div>

      {/* App Info */}
      <div className="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg">
        <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
          –û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
        </h3>
        
        <div className="text-sm text-gray-600 dark:text-gray-400 space-y-2">
          <p><strong>–í–µ—Ä—Å–∏—è:</strong> 1.0.0</p>
          <p><strong>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:</strong> SMM Bot Team</p>
          <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> Telegram –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è SMM –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º</p>
        </div>
      </div>
    </div>
  );
}; 